#!/bin/sh
#
# Startup script for program
#
# chkconfig: 35 55 25        
# description: Prism Media Server 
# processname: ms
# pidfile: /var/run/voxeo-ms.pid

WaitForPidToExit() {
  # check for a maximum of 60 seconds
  local retry=60
  local pid=`cat $PIDFILE`
  local foundpid=

  foundpid=$(ps -ef | grep $pid | awk '!/grep/ {print $2}')
  while [ -n "$foundpid" -a "$retry" -gt 0 ]; do
    sleep 1
    echo -n "."
    retry=$(($retry -1))
    foundpid=$(ps -ef | grep $pid | awk '!/grep/ {print $2}')
  done

  # if Process still running, kill it
  if [ -n "$foundpid" ] ; then
    echo ""
    echo $pid " is still running.  Kill it."
    kill -9 `ps -ef | grep $pid | awk '!/grep/ {print $2}'`
  fi
}

PIDFILE=/var/run/voxeo-ms.pid
LOCKFILE=/var/run/voxeo-ms

case "$1" in
  start)
    echo -n "Starting  MS: "
    if [ -e $PIDFILE ]; then
      echo "  MS Already running.  Stop it first."
      exit 1
    fi 
    export HOME=/opt/voxeo/prism
    export LD_LIBRARY_PATH=/opt/voxeo/prism/bin:/opt/voxeo/prism/lib:$LD_LIBRARY_PATH$
    cd /opt/voxeo/prism/bin;  /opt/voxeo/prism/bin/prism service ms PIDFILE=$PIDFILE 2>&1 >>/dev/null
    echo
    touch $LOCKFILE
    ;;
  stop)
    echo -n "Shutting down MS: "
    if [ -e $PIDFILE ]; then
      kill `cat $PIDFILE`
      WaitForPidToExit
    else
      echo "  ms not running."
    fi
    echo
    rm -f $LOCKFILE
    rm -f $PIDFILE
    ;;
  status)
    echo "This isn't currently supported on Ubuntu."
    exit 1
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  reload)
    echo "This isn't currently supported on Ubuntu."
    exit 1
    ;;
  *)
  echo "Usage: $0 {start|stop|restart|reload|status}"
  exit 1
esac

exit 0
